[package]
edition = "2021"
description = "OpenEthereum"
name = "openethereum"
# NOTE Make sure to update util/version/Cargo.toml as well
version = "3.5.0-rc2"
license = "GPL-3.0"
authors = ["OpenEthereum developers", "Parity Technologies <admin@parity.io>"]

[dependencies]
blooms-db = { path = "crates/db/blooms-db" }
daemonize = "0.5.0"
log = "0.4"
rustc-hex = "1.0.0"
docopt = "1.1.1"
clap = "2.34.0"
term_size = "1.0.0-beta1"
textwrap = "0.9.0"
num_cpus = "1.17.0"
number_prefix = "0.2.8"
rpassword = "1.0.2"
semver = "0.9.0"
ansi_term = "0.12.1"
parking_lot = "0.12.4"
crossbeam-channel = "0.5.15"
regex = "1.11"
atty = "0.2.14"
toml = "0.9.2"
serde = "1.0.219"
serde_json = "1.0.140"
serde_derive = "1.0.219"
futures = "0.1.31"
tokio = { version = "1.42.1", features = ["rt", "rt-multi-thread", "macros"] }
hyper = { version = "0.14.12" }
fdlimit = "0.3.0"
ctrlc = { git = "https://github.com/paritytech/rust-ctrlc.git" }
jsonrpc-core = "15.0.0"
parity-bytes = "0.1.2"
common-types = { path = "crates/ethcore/types" }
ethcore = { path = "crates/ethcore", features = ["parity"] }
ethcore-accounts = { path = "crates/accounts", optional = true }
ethcore-blockchain = { path = "crates/ethcore/blockchain" }
ethcore-call-contract = { path = "crates/vm/call-contract" }
ethcore-db = { path = "crates/db/db" }
ethcore-io = { path = "crates/runtime/io" }
ethcore-logger = { path = "bin/oe/logger" }
ethcore-miner = { path = "crates/concensus/miner" }
ethcore-network = { path = "crates/net/network" }
ethcore-service = { path = "crates/ethcore/service" }
ethcore-sync = { path = "crates/ethcore/sync" }
ethereum-types = "0.9.2"
ethkey = { path = "crates/accounts/ethkey" }
ethstore = { path = "crates/accounts/ethstore" }
fetch = { path = "crates/net/fetch" }
node-filter = { path = "crates/net/node-filter" }
parity-crypto = { version = "0.6.2", features = ["publickey"] }
rlp = { version = "0.4.6" }
cli-signer = { path = "crates/util/cli-signer" }
parity-local-store = { path = "crates/concensus/miner/local-store" }
parity-runtime = { path = "crates/runtime/runtime" }
parity-rpc = { path = "crates/rpc" }
rpc-servers = { path = "crates/rpc-servers", package = "oe-rpc-servers" }
parity-version = { path = "crates/util/version" }
parity-path = "0.1.3"
dir = { path = "crates/util/dir" }
panic_hook = { path = "crates/util/panic-hook" }
keccak-hash = "0.5.1"
migration-rocksdb = { path = "crates/db/migration-rocksdb" }
kvdb = "0.1.1"
kvdb-rocksdb = "0.1.6"
journaldb = { path = "crates/db/journaldb" }
stats = { path = "crates/util/stats" }
aes = { path = "crates/util/aes" }
prometheus = "0.14.0"

[dev-dependencies]
pretty_assertions = "0.1.2"
ipnetwork = "0.12.8"        # fixed minor
tempdir = "0.3.7"
lazy_static = "1.5.0"

[patch.crates-io]
aes = { path = "crates/util/aes" }

[features]
default = ["accounts"]
accounts = ["ethcore-accounts", "parity-rpc/accounts"]
miner-debug = ["ethcore/miner-debug"]
json-tests = ["ethcore/json-tests"]
ci-skip-tests = ["ethcore/ci-skip-tests"]
test-heavy = ["ethcore/test-heavy"]
evm-debug = ["ethcore/evm-debug"]
evm-debug-tests = ["ethcore/evm-debug-tests"]
slow-blocks = ["ethcore/slow-blocks"]
final = ["parity-version/final"]
deadlock_detection = ["parking_lot/deadlock_detection"]
secretstore = []

# to create a memory profile (requires nightly rust), use e.g.
# `heaptrack /path/to/parity <parity params>`,
# to visualize a memory profile, use `heaptrack_gui`
# or
# `valgrind --tool=massif /path/to/parity <parity params>`
# and `massif-visualizer` for visualization
memory_profiling = []

[lib]
path = "bin/oe/lib.rs"

[[bin]]
path = "bin/oe/main.rs"
name = "openethereum"

[profile.test]
lto = false
opt-level = 3 # makes tests slower to compile, but faster to run

[profile.dev]
debug = true
opt-level = 0
debug-assertions = true
overflow-checks = true
panic = 'abort'
incremental = true

[profile.release]
debug = false
lto = true

[workspace]
# This should only list projects that are not
# in the dependency tree in any other way
# (i.e. pretty much only standalone CLI tools)
members = ["bin/ethkey", "bin/ethstore", "bin/evmbin", "bin/chainspec"]
